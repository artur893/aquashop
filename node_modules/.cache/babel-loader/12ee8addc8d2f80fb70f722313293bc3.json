{"ast":null,"code":"var _jsxFileName = \"/home/artur893/repos/routing/aquashop/src/components/boiling.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scaleNames = {\n  c: \"Celsius\",\n  f: \"Fahrenheit\"\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The water would boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"The water would not boil.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n}\n\n_c = BoilingVerdict;\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: [\"Enter temperature in \", scaleNames[scale], \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: temperature,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: \"\",\n      scale: \"c\"\n    };\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: \"c\",\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: \"f\",\n      temperature\n    });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"c\",\n        temperature: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"f\",\n        temperature: fahrenheit,\n        onTemperatureChange: this.handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n        celsius: parseFloat(celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport { Calculator };\n\nvar _c;\n\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"names":["React","ReactDOM","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","BoilingVerdict","props","TemperatureInput","Component","constructor","handleChange","bind","e","onTemperatureChange","target","value","render","scale","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState"],"sources":["/home/artur893/repos/routing/aquashop/src/components/boiling.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nconst scaleNames = {\n    c: \"Celsius\",\n    f: \"Fahrenheit\"\n  };\n  \n  function toCelsius(fahrenheit) {\n    return ((fahrenheit - 32) * 5) / 9;\n  }\n  \n  function toFahrenheit(celsius) {\n    return (celsius * 9) / 5 + 32;\n  }\n  \n  function tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n      return \"\";\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  }\n  \n  function BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n      return <p>The water would boil.</p>;\n    }\n    return <p>The water would not boil.</p>;\n  }\n  \n  class TemperatureInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n    }\n  \n    handleChange(e) {\n      this.props.onTemperatureChange(e.target.value);\n    }\n  \n    render() {\n      const temperature = this.props.temperature;\n      const scale = this.props.scale;\n      return (\n        <fieldset>\n          <legend>Enter temperature in {scaleNames[scale]}:</legend>\n          <input value={temperature} onChange={this.handleChange} />\n        </fieldset>\n      );\n    }\n  }\n  \n  class Calculator extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n      this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n      this.state = { temperature: \"\", scale: \"c\" };\n    }\n  \n    handleCelsiusChange(temperature) {\n      this.setState({ scale: \"c\", temperature });\n    }\n  \n    handleFahrenheitChange(temperature) {\n      this.setState({ scale: \"f\", temperature });\n    }\n  \n    render() {\n      const scale = this.state.scale;\n      const temperature = this.state.temperature;\n      const celsius =\n        scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n      const fahrenheit =\n        scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n  \n      return (\n        <div>\n          <TemperatureInput\n            scale=\"c\"\n            temperature={celsius}\n            onTemperatureChange={this.handleCelsiusChange}\n          />\n          <TemperatureInput\n            scale=\"f\"\n            temperature={fahrenheit}\n            onTemperatureChange={this.handleFahrenheitChange}\n          />\n          <BoilingVerdict celsius={parseFloat(celsius)} />\n        </div>\n      );\n    }\n  }\n  \nexport {Calculator}"],"mappings":"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"},"metadata":{},"sourceType":"module"}